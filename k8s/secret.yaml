apiVersion: v1
kind: Secret
metadata:
  name: heart-failure-prediction-secrets
  namespace: heart-failure-prediction
type: Opaque
data:
  # Database credentials (base64 encoded)
  # To generate: echo -n "your-password" | base64
  database-password: cG9zdGdyZXNfcGFzc3dvcmQ=  # postgres_password
  database-username: cG9zdGdyZXM=                 # postgres
  
  # Redis credentials
  redis-password: cmVkaXNfcGFzc3dvcmQ=           # redis_password
  
  # API keys (replace with actual values)
  api-key: eW91cl9hcGlfa2V5X2hlcmU=             # your_api_key_here
  
  # JWT secret for authentication
  jwt-secret: and1cl9zZWNyZXRfa2V5X2Zvcl9qd3Q=   # jwt_secret_key_for_jwt
  
  # SSL certificate (if needed)
  # tls-crt: base64_encoded_certificate
  # tls-key: base64_encoded_private_key
  
  # Monitoring credentials
  grafana-admin-password: YWRtaW4=               # admin
  prometheus-password: cHJvbWV0aGV1cw==          # prometheus
  
  # Application secrets
  encryption-key: ZW5jcnlwdGlvbl9rZXlfZm9yX2FwcA==  # encryption_key_for_app
  
---
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
  namespace: heart-failure-prediction
type: kubernetes.io/dockerconfigjson
data:
  # Docker registry credentials for pulling private images
  # Create with: kubectl create secret docker-registry registry-secret \
  #   --docker-server=your-registry.com \
  #   --docker-username=your-username \
  #   --docker-password=your-password \
  #   --docker-email=your-email@example.com
  .dockerconfigjson: eyJhdXRocyI6e319  # placeholder - update with actual registry credentials