apiVersion: v1
kind: PersistentVolume
metadata:
  name: models-pv
  labels:
    app: heart-failure-prediction
    type: models
spec:
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  # For NFS storage
  nfs:
    server: nfs-server.example.com
    path: /exports/heart-failure-prediction/models
  # Alternative: Local storage (for development)
  # hostPath:
  #   path: /var/lib/heart-failure-prediction/models
  #   type: DirectoryOrCreate
  # Alternative: AWS EBS
  # awsElasticBlockStore:
  #   volumeID: vol-xxxxxxxxx
  #   fsType: ext4
  # Alternative: Azure Disk
  # azureDisk:
  #   diskName: heart-failure-models-disk
  #   diskURI: /subscriptions/.../disks/heart-failure-models-disk
  # Alternative: GCP Persistent Disk
  # gcePersistentDisk:
  #   pdName: heart-failure-models-disk
  #   fsType: ext4

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: logs-pv
  labels:
    app: heart-failure-prediction
    type: logs
spec:
  capacity:
    storage: 2Gi
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  nfs:
    server: nfs-server.example.com
    path: /exports/heart-failure-prediction/logs

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: data-pv
  labels:
    app: heart-failure-prediction
    type: data
spec:
  capacity:
    storage: 10Gi
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  nfs:
    server: nfs-server.example.com
    path: /exports/heart-failure-prediction/data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: models-pvc
  namespace: heart-failure-prediction
  labels:
    app: heart-failure-prediction
    type: models
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard
  selector:
    matchLabels:
      app: heart-failure-prediction
      type: models

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: logs-pvc
  namespace: heart-failure-prediction
  labels:
    app: heart-failure-prediction
    type: logs
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: standard
  selector:
    matchLabels:
      app: heart-failure-prediction
      type: logs

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-pvc
  namespace: heart-failure-prediction
  labels:
    app: heart-failure-prediction
    type: data
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
  selector:
    matchLabels:
      app: heart-failure-prediction
      type: data

---
# StorageClass for dynamic provisioning (cloud environments)
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: heart-failure-prediction-ssd
  labels:
    app: heart-failure-prediction
provisioner: kubernetes.io/aws-ebs  # Change based on cloud provider
parameters:
  type: gp3
  fsType: ext4
  encrypted: "true"
  # AWS specific parameters
  iops: "3000"
  throughput: "125"
  # Azure specific parameters (if using Azure)
  # skuName: Premium_LRS
  # kind: Managed
  # GCP specific parameters (if using GCP)
  # type: pd-ssd
  # replication-type: regional-pd
reclaimPolicy: Delete
allowVolumeExpansion: true
volumeBindingMode: WaitForFirstConsumer