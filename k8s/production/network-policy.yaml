# Network policy to control traffic flow
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: heart-failure-prediction-network-policy
  namespace: heart-failure-prediction
  labels:
    app: heart-failure-prediction
spec:
  podSelector:
    matchLabels:
      app: heart-failure-prediction
  policyTypes:
  - Ingress
  - Egress
  
  ingress:
  # Allow ingress from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8501
  
  # Allow ingress from monitoring namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090
  
  # Allow ingress from same namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: heart-failure-prediction
    ports:
    - protocol: TCP
      port: 8501
    - protocol: TCP
      port: 9090
  
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  
  # Allow HTTPS outbound (for external APIs)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  
  # Allow HTTP outbound (if needed)
  - to: []
    ports:
    - protocol: TCP
      port: 80
  
  # Allow database connections (if external)
  - to:
    - namespaceSelector:
        matchLabels:
          name: database
    ports:
    - protocol: TCP
      port: 5432
  
  # Allow Redis connections (if external)
  - to:
    - namespaceSelector:
        matchLabels:
          name: cache
    ports:
    - protocol: TCP
      port: 6379

---
# Deny all by default policy (apply this carefully)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: heart-failure-prediction
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress